services:
  db:
    container_name: kokkai-summary-db
    image: postgres:18
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB_FILE: /run/secrets/postgres_db
    restart: always
    ports:
      - "5432:5432"
    networks:
      - kokkai-summary
    volumes:
      - db_data:/var/lib/postgresql/18/docker
      - ./postgresql.conf:/var/lib/postgresql/18/docker/postgresql.conf
    secrets:
      - postgres_user
      - postgres_password
      - postgres_db
  api:
    container_name: kokkai-summary-api
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "4000:8000"
    networks:
      - sigsegvvv-xyz
      - kokkai-summary
    secrets:
      - database_url
    depends_on:
      - db
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: api
          target: /app/api
          ignore:
            - __pycache__
            - Dockerfile
        - action: sync
          path: db
          target: /app/db
          ignore:
            - __pycache__
            - Dockerfile
        - action: rebuild
          path: api/Dockerfile
  summary:
    container_name: kokkai-summary-summary
    build:
      context: .
      dockerfile: summary/Dockerfile
    networks:
      - kokkai-summary
    secrets:
      - database_url
      - gemini_api_key
    depends_on:
      - db
    restart: on-failure
    develop:
      watch:
        - action: sync+restart
          path: summary
          target: /app/summary
          ignore:
            - __pycache__
            - Dockerfile
            - cronjob
        - action: sync+restart
          path: db
          target: /app/db
          ignore:
            - __pycache__
            - Dockerfile
        - action: sync+exec
          path: summary/cronjob
          target: /etc/cron.d/summary-cron
          exec:
            command: cron -f
        - action: rebuild
          path: summary/Dockerfile
  web:
    container_name: kokkai-summary-web
    build:
      context: web
      dockerfile: Dockerfile
      target: main
    ports:
      - "3002:3000"
    networks:
      - sigsegvvv-xyz
    depends_on:
      - api
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: web
          target: /app
          ignore:
            - node_modules/
            - build/
        - action: rebuild
          path: web/package.json
        - action: rebuild
          path: web/package-lock.json
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      retries: 5
      start_period: 1m
      interval: 30s

volumes:
  db_data:

networks:
  kokkai-summary:
  sigsegvvv-xyz:
    name: sigsegvvv-xyz
    external: true

secrets:
  database_url:
    name: database_url
    file: ${SECRETS_PATH}/database_url
  gemini_api_key:
    name: gemini_api_key
    file: ${SECRETS_PATH}/gemini_api_key
  postgres_user:
    name: postgres_user
    file: ${SECRETS_PATH}/postgres_user
  postgres_password:
    name: postgres_password
    file: ${SECRETS_PATH}/postgres_password
  postgres_db:
    name: postgres_db
    file: ${SECRETS_PATH}/postgres_db
